<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="MAIN" Id="{680b4bc1-2fdc-4552-9c70-ccc22fa3fe48}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR	
	TxD : ARRAY[0..1] OF BYTE;
	OKIA : BOOL := FALSE;
	OKTA : BOOL := FALSE;
	RxD : ARRAY[0..255] OF BYTE;
	State : ComState := ComState.Idle;
	SendD : SendData;
	ReceiveD : ReceiveData;
	TxBuffer AT %Q* : ComBuffer;
	RxBuffer AT %I* : ComBuffer;
	LatestValue AT %I* : BYTE;
	Status AT %I*: UINT;
	Ta AT %I* : BOOL;
	Rr AT %I* : BOOL;
	Ia AT %I* : BOOL;
	Bf AT %I* : BOOL;
	Pe AT %I* : BOOL;
	Fe AT %I* : BOOL;
	Oe AT %I* : BOOL;
	Il AT %I* : USINT;
	Tr AT %Q*: BOOL;
	Ra AT %Q*: BOOL;
	Ir AT %Q*: BOOL;
	Sc AT %Q*: BOOL;
	Ol AT %Q* : USINT;
	SCounter : INT; 
	RCounter : INT := 0;
	I : INT;
	OldRR : BOOL := Rr;
	FbClearBuffer  : ClearComBuffer;
	RxData : ARRAY[0..21] OF BYTE;
	FBRecv : ReceiveData;
	LatestReading : BYTE;
	//OldRa : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(**Ignore all variables and states that don't appear in the code
Please make a new branch before writing any modifications*)

CASE State OF
	
	ComState.Idle: //Idle state, the algorithm begins here
	
		
		Ir := TRUE; //Set Init request to true
		State := ComState.WaitForInit; //wait for init accepted
	
	ComState.WaitForInit:
	
		IF Ia THEN //if init accepted turns true
			Ir := FALSE; //revert the request
			State := ComState.WaitForNotInit; //wait for init to be inverted
		END_IF
	
	ComState.WaitForNotInit:

		IF NOT Ia THEN //init inverted
			State := ComState.Send; //go to send state
		END_IF	
	
	ComState.Send:
	
		Ol := 2; //output length = 2 (length of request is 2 bytes)
		TxBuffer.Buffer[0] := 16#01; //first byte (sensor's address)
		TxBuffer.Buffer[1] := 16#87; //second byte (data stream request)
		Tr := TRUE; //set Transmission Request to true
		SCounter := SCounter + 1;
		State := ComState.WaitForTransmit; //wait for Transmission to be accepted by terminal
		
	ComState.WaitForTransmit:
		IF Ta THEN //Transmission accepted
			State := ComState.WaitForReceive; //wait for readings
		END_IF
		
	ComState.WaitForReceive:
		
		IF NOT Rr = OldRR THEN //Receive Request inverted means new data available
			OldRR := Rr; //keep track of old value
			Ra := TRUE;	//accept the receive request
			State := ComState.RecvSetUp; //set up the receive function block
		END_IF
		
	ComState.RecvSetUp:
	
		FBRecv(
			pReceiveData := ADR(RxData), //pointer to where data should go
			SizeReceiveData := SIZEOF(RxData), 
			RXbuffer := RxBuffer //buffer where data is received
		);
		State := ComState.Recv;
	ComState.Recv:
	
		IF FBRecv.DataReceived THEN
			ADSLOGSTR(msgCtrlMask := ADSLOG_MSGTYPE_ERROR OR ADSLOG_MSGTYPE_LOG,
				msgFmtStr := 'Log %s',
				strArg := 'Data received');
			LatestReading := RxData[21];
			State := ComState.WaitForReceive; //wait for new data
		END_IF
				
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="376" Count="0" />
      <LineId Id="378" Count="0" />
      <LineId Id="377" Count="0" />
      <LineId Id="23" Count="4" />
      <LineId Id="150" Count="0" />
      <LineId Id="223" Count="1" />
      <LineId Id="154" Count="0" />
      <LineId Id="225" Count="0" />
      <LineId Id="227" Count="1" />
      <LineId Id="230" Count="0" />
      <LineId Id="229" Count="0" />
      <LineId Id="226" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="234" Count="0" />
      <LineId Id="233" Count="0" />
      <LineId Id="236" Count="0" />
      <LineId Id="235" Count="0" />
      <LineId Id="232" Count="0" />
      <LineId Id="31" Count="1" />
      <LineId Id="188" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="198" Count="0" />
      <LineId Id="200" Count="1" />
      <LineId Id="203" Count="2" />
      <LineId Id="202" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="294" Count="0" />
      <LineId Id="307" Count="1" />
      <LineId Id="380" Count="0" />
      <LineId Id="310" Count="0" />
      <LineId Id="306" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="50" Count="1" />
      <LineId Id="56" Count="0" />
      <LineId Id="357" Count="0" />
      <LineId Id="369" Count="0" />
      <LineId Id="358" Count="1" />
      <LineId Id="361" Count="3" />
      <LineId Id="372" Count="3" />
      <LineId Id="365" Count="1" />
      <LineId Id="88" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>